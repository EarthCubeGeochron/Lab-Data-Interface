#!/usr/bin/env python
# Command to run tests
# Runs inside Docker container so we can depend on library availabilty.
import os
from sys import argv
from click import echo
from subprocess import run
from shlex import split

args = argv[1:]

psql = False
if "--psql" in args:
    psql = True
    args.remove("--psql")

keep_database = False
if "--keep-database" in args:
    keep_database = True
    args.remove("--keep-database")

os.chdir("/app")

dbargs = split("-U postgres -h db -p 5432")

os.environ["SPARROW_DATABASE"] = "postgresql://postgres@db:5432/sparrow_test"


# def teardown_database(message="Tearing down database..."):
#     print(message)
#     return run(["dropdb", *dbargs, "sparrow_test"])


# if keep_database:
#     echo("Using existing testing database")
# elif not keep_database:
#     teardown_database("Dropping existing testing database")
# res = run(["createdb", *dbargs, "sparrow_test"])

# This prevents us from getting absolutely spammed by SAWarning
# TODO: improve warning handling for database automapping
args.append("--disable-warnings")

print("Running tests")
run(["pytest", "/app/sparrow_tests", *args])

if psql:
    echo(
        "Initializing psql shell. "
        "The database is also available on localhost port 54322"
    )
    run(["psql", *dbargs, "sparrow_test"])

if not keep_database:
    teardown_database()
echo("Done!")
