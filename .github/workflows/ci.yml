name: Sparrow continuous integration
on:
  push:
    branches: [master, develop]
  pull_request:
    branches: [master, develop]
jobs:
  test:
    # We could refactor shared steps into a "Composite run steps action", maybe
    # https://docs.github.com/en/actions/creating-actions/creating-a-composite-run-steps-action
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      - name: Update submodules
        run: git submodule update --init --recursive

      - name: Install CLI build dependencies
        run: >
          sudo apt-get update
          sudo apt-get -y install python3 python3-venv

      # Bundling
      - name: Bundle command-line application with PyInstaller
        run: >
          make
          sudo make install-dev

        name: Run Sparrow tests for built application
        run: sparrow test
  build:
    # Note: for deployment, we might need to move to an older version of Ubuntu
    # https://pyinstaller.readthedocs.io/en/stable/usage.html
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      - name: Update submodules
        run: git submodule update --init --recursive

      - name: Install CLI build dependencies
        run: >
          sudo apt-get update
          sudo apt-get -y install python3 python3-venv

        # Bundling
      - name: Bundle command-line application with PyInstaller
        run: >
          make build
          sudo make install

        name: Run Sparrow tests for built application
        run: sparrow test

      # Deployment (only runs for tagged commits on `master` or `develop`)
      # Note: see https://github.com/overhangio/tutor/releases for a well-developed release schedule
      - name: Create release
        if: startsWith(github.ref, 'refs/tags/')
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload Sparrow CLI for release
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./my-artifact.zip
          asset_name: my-artifact.zip
          asset_content_type: application/zip
    # We could fix this using a build matrix
    # https://docs.github.com/en/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix